using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Configuration;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using MapfreMCL.oracle;
using Oracle.DataAccess.Client;

/// <summary>
/// Summary description for Cotizador
/// </summary>
public class Cotiza
{
    #region Cantidad de Planes

    public static DataSet CantPlanes(string cod_conv)
    {
        DataSet cant = null;
        Cotiza_DB objCantidad = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objCantidad.CantPlanes_DB(cod_conv, Conexion);
               
                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }
    #endregion	

    public static DataRow Cotizar(string cod_modalidad, string cod_marca, string cod_modelo, string cod_submodelo, string año, string cod_docum, string cod_docum_aseg, string num_matricula, string cod_ramo, string monto_rc, string edad, string sexo, string cant_siniestros, string monto_siniestros, string rc_exceso,string antig_veh,string cod_conv,string cob_opc, string mca_mel, string tipo_descuento_databusiness, string descuento_databusiness)
    {
        DataRow cotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cotizacion = objcotiza.Cotizar_DB(cod_ramo, cod_docum, cod_docum_aseg, Convert.ToInt32(cod_marca), Convert.ToInt32(cod_modelo), Convert.ToInt32(cod_submodelo), Convert.ToInt32(cod_modalidad), num_matricula, monto_rc, edad, sexo, cant_siniestros, monto_siniestros, rc_exceso, antig_veh, cod_conv, cob_opc, mca_mel, tipo_descuento_databusiness, descuento_databusiness, Conexion);
                return cotizacion;
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow Cotizar_Fechas(string cod_modalidad, string cod_marca, string cod_modelo, 
                                         string cod_submodelo, string año, string cod_docum, 
                                         string cod_docum_aseg, string num_matricula, string fecha_inicio, 
                                         string fecha_fin, string cod_ramo, string monto_rc, string edad, 
                                         string sexo, string cant_siniestros, string monto_siniestros, 
                                         string rc_exceso, string antig_veh, string cod_conv, string cob_opc, 
                                         string mca_mel, string tipo_descuento_databusiness, string descuento_databusiness)
    {
        DataRow cotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            if (!String.IsNullOrEmpty(fecha_inicio) || !String.IsNullOrEmpty(fecha_fin))
            {

                using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
                {
                    cotizacion = objcotiza.Cotizar_Fechas_DB(cod_ramo, cod_docum, cod_docum_aseg, 
                        Convert.ToInt32(cod_marca), Convert.ToInt32(cod_modelo), Convert.ToInt32(cod_submodelo), 
                        Convert.ToInt32(cod_modalidad), num_matricula, monto_rc, edad, sexo, cant_siniestros, 
                        monto_siniestros, rc_exceso, antig_veh, cod_conv, cob_opc, fecha_inicio, fecha_fin, 
                        mca_mel, tipo_descuento_databusiness, descuento_databusiness, Conexion);
                    return cotizacion;
                }
            }
            else
            {
                using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
                {
                    cotizacion = objcotiza.Cotizar_DB(cod_ramo, cod_docum, cod_docum_aseg, 
                        Convert.ToInt32(cod_marca), Convert.ToInt32(cod_modelo), Convert.ToInt32(cod_submodelo), 
                        Convert.ToInt32(cod_modalidad), num_matricula, monto_rc, edad, sexo, cant_siniestros, 
                        monto_siniestros, rc_exceso, antig_veh, cod_conv, cob_opc, mca_mel, 
                        tipo_descuento_databusiness, descuento_databusiness, Conexion);
                    return cotizacion;
                }
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string NomModalidad(string cod_modalidad)
    {
        DataRow modalidad = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                modalidad = objcotiza.NomModalidad_DB(Convert.ToInt32(cod_modalidad), Conexion);

                return modalidad["p_nom_modalidad"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string PolizaExistente(string num_matricula)
    {
        DataRow modalidad = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                modalidad = objcotiza.PolizaExistente_DB(num_matricula, Conexion);

                return modalidad["p_error"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    public static string PrimaTec(string cod_docum_aseg)
    {
        DataRow primatecnica = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using(OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                primatecnica = objcotiza.PrimaTec_DB(cod_docum_aseg,"","",Conexion);

                return primatecnica["P_PRIMA_TEC_MIN"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string PrimaTec(string cod_docum_aseg, string cod_docum_tomad)
    {
        DataRow primatecnica = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                primatecnica = objcotiza.PrimaTec_DB(cod_docum_aseg, cod_docum_tomad, "", Conexion);

                return primatecnica["P_PRIMA_TEC_MIN"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string PrimaTecMatricula(string num_matricula)
    {
        DataRow primatecnica = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                primatecnica = objcotiza.PrimaTec_DB("", "", num_matricula, Conexion);

                return primatecnica["P_PRIMA_TEC_MIN"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow GrabaCotizacion(string cod_docum, string cod_docum_aseg, string num_matricula, 
        string stringcot, string num_cotizacion, string cod_ramo, string monto_rc, string sexo, 
        string edad, string rc_exceso, string ID, string fact_48, string convenio, string cob_opc, string mca_mel, string fec_ini_vig, string fec_fin_vig)
    {
        DataRow grabacotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                grabacotizacion = objcotiza.GrabaCotizacion_DB(cod_docum,cod_docum_aseg,num_matricula,stringcot, 
                    num_cotizacion,cod_ramo,monto_rc,sexo,edad,rc_exceso,ID,fact_48,convenio,cob_opc,mca_mel,
                    fec_ini_vig,fec_fin_vig,Conexion);
                return grabacotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow GrabaCotizacionEmite(string COD_DOCUM, string COD_DOCUM_ASEG, string NUM_MATRICULA, 
        string FECHA_INICIO_VIGENCIA, string FECHA_FIN_VIGENCIA, string COD_MODALIDAD, decimal PRIMA_NETA, 
        string DESC, string COD_RAMO, string MONTO_RC, string EDAD_CONDUCTOR, string SEXO_CONDUCTOR, 
        string NUM_COTIZACION, string RC_EXCESO, string ID, string fact_48, string convenio, 
        string cob_opc, string mca_mel)
    {
        DataRow grabacotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            if (String.IsNullOrEmpty(FECHA_INICIO_VIGENCIA) && String.IsNullOrEmpty(FECHA_FIN_VIGENCIA))
            {
                using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
                {
                    grabacotizacion = objcotiza.GrabaCotizacionEmite_DB(COD_DOCUM, COD_DOCUM_ASEG, NUM_MATRICULA, COD_MODALIDAD, PRIMA_NETA, DESC, COD_RAMO, MONTO_RC, EDAD_CONDUCTOR, SEXO_CONDUCTOR, NUM_COTIZACION, RC_EXCESO, ID, fact_48, convenio, cob_opc, mca_mel, Conexion);
                    return grabacotizacion;
                }
            }
            else
            {
                using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
                {
                    grabacotizacion = objcotiza.GrabaCotizacionEmite_Fechas_DB(COD_DOCUM, COD_DOCUM_ASEG, NUM_MATRICULA, COD_MODALIDAD, PRIMA_NETA, DESC, COD_RAMO, MONTO_RC, FECHA_INICIO_VIGENCIA, FECHA_FIN_VIGENCIA, EDAD_CONDUCTOR, SEXO_CONDUCTOR, NUM_COTIZACION, RC_EXCESO, ID, fact_48, convenio, cob_opc, mca_mel, Conexion);                    
                    return grabacotizacion;
                }
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow GrabaVehiculoCot(string num_matricula, string cod_docum, string cod_marca, string cod_modelo, string cod_sub_modelo, string anio_fab, string id)
    {
        DataRow grabavehiculo = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                grabavehiculo = objcotiza.GrabaVehiculoCot_DB(num_matricula,cod_docum,cod_marca,cod_modelo,cod_sub_modelo,anio_fab,id, Conexion);
                return grabavehiculo;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ImprimeCotizacion(string num_cotizacion)
    {
        DataRow imprimecotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                imprimecotizacion = objcotiza.ImprimeCotizacion_DB(num_cotizacion, Conexion);
                return imprimecotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ImprimeNuevaCotizacion(string num_cuotas_PAT, string num_cotizacion)
    {
        DataRow imprimecotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                imprimecotizacion = objcotiza.ImprimeNuevaCotizacion_DB(num_cuotas_PAT, num_cotizacion, Conexion);
                return imprimecotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ImprimeNuevaCotizacionAntiguo(string num_cuotas_PAT, string num_cotizacion)
    {
        DataRow imprimecotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                imprimecotizacion = objcotiza.ImprimeNuevaCotizacion_DB_Antiguo(num_cuotas_PAT, num_cotizacion, Conexion);
                return imprimecotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow LlamaSisgen(string cod_docum_aseg, string cod_docum_tomad, string num_matricula)
    {
        DataRow sisgen = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                sisgen = objcotiza.LlamaSisgen_DB(cod_docum_aseg, cod_docum_tomad, num_matricula, Conexion);
                return sisgen;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string EnviaCorreo(string cod_ramo, string num_cotizacion, string correo_destino, string correo_corredor, string correo_cc, string mensaje, string url)
    {
        DataRow emailcot = null;        

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                string tabla;
                string result;

                tabla = "<TABLE>";
                tabla += "<TR>";
                tabla += "<TD width='500'>";
                tabla += "<FONT size='2' face='Arial'><STRONG>Mensaje Adjunto :</STRONG></font>";
                tabla += "<P><STRONG>" + mensaje + "</STRONG></P>";
                tabla += "</TD>";
                tabla += "</TR>";
                tabla += "</TABLE>";

                string asunto = ConfigurationManager.AppSettings["ASUNTO_CORREO"];

                // Get the 'pages' section.
                Configuration configuration = WebConfigurationManager.OpenWebConfiguration("~");
                PagesSection pagesSection = (PagesSection)configuration.GetSection("system.web/pages");

                result = pagesSection.StyleSheetTheme;

                string logo_correo = ConfigurationManager.AppSettings["Server"].ToString() + "/CotizadorVeh/App_Themes/" + result + "/Images/logocorreo.jpg";

                emailcot = UtilesWeb.EnviaCorreo_DB("1", cod_ramo, num_cotizacion, correo_destino, correo_corredor, correo_cc, asunto, mensaje, logo_correo, url, Conexion);

                return emailcot["P_ERROR"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ValidaInspeccion(string num_matricula, string cod_docum, string cod_ramo, string convenio)
    {
        DataRow inspeccion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                inspeccion = objcotiza.ValidaInspeccion_DB(num_matricula, cod_docum, cod_ramo, convenio, Conexion);
                return inspeccion;
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static void AsignaInspeccion(string num_cotizacion, string num_inspeccion)
    {
        DataRow inspeccion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                inspeccion = objcotiza.AsignaInspeccion_DB(num_cotizacion, num_inspeccion, Conexion);
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    public static DataSet OpcionesCotizador(string cod_conv)
    {
        DataSet cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.OpcionesCotizador_DB(cod_conv, Conexion);

                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ValidaSuplantacion(string cod_docum)
    {
        DataRow cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.ValidaSuplantacion_DB(cod_docum, Conexion);

                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow CargaDatosConvenioCot(string num_cotizacion)
    {
        DataRow cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.CargaDatosConvenioCot_DB(num_cotizacion, Conexion);

                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataSet CargaDatosCotizacion(string num_cotizacion)
    {
        DataSet datos = null;
        Cotiza_DB objOpciones = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                datos = objOpciones.CargaDatosCotizacion_DB(num_cotizacion, Conexion);

                return datos;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ValidaRiesgoPolVigente(string cod_docum_aseg,string cod_marca,string cod_modelo,string cod_sub_modelo,string cod_conv, string rc_exceso )
    {
        DataRow pol_vig = null;
        Cotiza_DB objPolVigentes = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                pol_vig = objPolVigentes.ValidaRiesgoPolVigente_DB(cod_docum_aseg, cod_marca, cod_modelo, cod_sub_modelo, cod_conv, rc_exceso, Conexion);

                return pol_vig;
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string OpcionesTMarketing(string cod_conv, string cod_docum, string cod_producto)
    {
        DataRow cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();
        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.OpcionesTMarketing_DB(cod_conv,cod_docum, cod_producto, Conexion);
                return cant["P_RESPUESTA"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string OpcionesTMarketingPopUp(string cod_conv, string cod_docum, string cod_producto)
    {
        DataRow cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();
        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.OpcionesTMarketingPopUp_DB(cod_conv, cod_docum, cod_producto, Conexion);
                return cant["P_RESPUESTA"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string GrabaTMarketing(string cod_docum_aseg, string nom_asegurado, string ape_paterno, string ape_materno, string email, string num_telefono, string num_telefono2, string cod_producto, string cod_docum, string cod_convenio, string num_cotizacion, string id_tmarketing)
    {
        DataRow graba = null;
        Cotiza_DB objOpciones = new Cotiza_DB();
        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                graba = objOpciones.GrabaTMarketing_DB(cod_docum_aseg, nom_asegurado, ape_paterno, ape_materno, email, num_telefono, num_telefono2, cod_producto, cod_docum, cod_convenio, num_cotizacion, id_tmarketing, Conexion);
                return graba["P_ID_TMARKETING"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    

    #region Cantidad de Planes

    public static string CuadroComisiones(string cod_docum, string cod_conv, DropDownList cmb)
    {
        DataSet cant = null;
        Cotiza_DB objCantidad = new Cotiza_DB();
        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objCantidad.CuadroComisiones_DB(cod_docum, cod_conv, Conexion);

                string mca_cuadros = cant.Tables[1].Rows[0][0].ToString();

                if (mca_cuadros == "S")
                {
                    cmb.DataSource = cant;
                    cmb.DataTextField = "PORC_COM";
                    cmb.DataValueField = "COD_CUADRO_COM";
                    cmb.DataBind();
                    //cmb.Items.Insert(0, new ListItem("Seleccionar", "0"));
                    //cmb.SelectedIndex = 3;
                    //cmb.SelectedItem.Text = "15%";

                    cant.Dispose();

                    for (int i = 0; i < cmb.Items.Count; i++)
                    {
                        if (cmb.Items[0].Value == "410")
                            cmb.SelectedIndex = i;
                    }

                }

                return mca_cuadros;
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }
    #endregion	

    public static DataRow CalcularComision(string cod_modalidad, string cod_docum, string cod_conv, string cod_cuadro_com, decimal prima_neta, string desc, string cod_ramo)
    {
        DataRow cotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cotizacion = objcotiza.CalcularComision_DB(Convert.ToInt32(cod_modalidad), cod_docum, cod_conv, cod_cuadro_com, prima_neta, desc, cod_ramo,Conexion);
                return cotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow GrabaComision(string num_cotizacion, string cod_cuadro_com)
    {
        DataRow cotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cotizacion = objcotiza.GrabaComision_DB(num_cotizacion, cod_cuadro_com, Conexion);
                return cotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow ValidaMcaMel(string cod_docum, string cod_conv)
    {
        DataRow cant = null;
        Cotiza_DB objOpciones = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objOpciones.ValidaMcaMel_DB(cod_docum, cod_conv, Conexion);

                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string PrimaExenta(string cod_ramo, string cod_modalidad)
    {
        DataRow primaexenta = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                primaexenta = objcotiza.PrimaExenta_DB(cod_ramo, cod_modalidad, Conexion);

                return primaexenta["P_MONTO_EXENTA"].ToString();
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static void GrabaOpcionInspeccion(string num_cotizacion, string opcion)
    {
        DataRow inspeccion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                inspeccion = objcotiza.GrabaOpcionInspeccion_DB(num_cotizacion, opcion, Conexion);
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    public static string PerdidaTotal(string num_matricula)
    {
        DataRow modalidad = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                modalidad = objcotiza.PerdidaTotal_DB(num_matricula, Conexion);

                return modalidad["p_perdida_total"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    public static string UpdateRamoSubModelo(string num_cotizacion, string cod_marca, string cod_modelo, string cod_sub_modelo)
    {
        DataRow grabavehiculo = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                grabavehiculo = objcotiza.UpdateRamoSubModelo_DB(num_cotizacion, cod_marca, cod_modelo, cod_sub_modelo, Conexion);
                return grabavehiculo["p_cod_ramo"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataRow LlamaDataBussines(string cod_cia, string cod_ramo, string cod_conv, string cod_docum_aseg)
    {
        DataRow databussines = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                databussines = objcotiza.LlamaDataBussines_DB(cod_cia, cod_ramo, cod_conv, cod_docum_aseg, Conexion);
                return databussines;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static DataSet TodosLosPlanes(string cod_conv)
    {
        DataSet cant = null;
        Cotiza_DB objCantidad = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cant = objCantidad.TodosLosPlanes_DB(cod_conv, Conexion);

                return cant;

            }

        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }

    }

    public static DataRow updCotizacionSiniestros(string num_cotizacion, string cant_siniestros, string monto_siniestros)
    {
        DataRow updcotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                updcotizacion = objcotiza.updCotizacionSiniestros_DB(num_cotizacion, cant_siniestros, monto_siniestros, Conexion);
                return updcotizacion;
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static string CalcularSinComision(string cod_modalidad, string cod_docum, string cod_conv, string cod_cuadro_com, string prima_neta, string desc, string cod_ramo)
    {
        DataRow cotizacion = null;
        Cotiza_DB objcotiza = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                cotizacion = objcotiza.CalcularSinComision_DB(Convert.ToInt32(cod_modalidad), cod_docum, cod_conv, cod_cuadro_com, prima_neta, desc, cod_ramo, Conexion);
                return cotizacion["P_PRIMA_NETA_SIN_CUADRO"].ToString();
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public static bool ValidaCambioComision(string num_cotizacion, string cod_cuadro_com_nuevo)
    {
        DataRow comision = null;
        Cotiza_DB objcomision = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                comision = objcomision.ValidaCambioComision_DB(num_cotizacion,cod_cuadro_com_nuevo, Conexion);
                if (comision["p_respuesta"].ToString() == "OK")
                    return true;
                else
                    return false;
            }
        }

        catch (Exception ex)
        {
            return false;
        }
    }

    public static bool RegistraPregCotizacion(int cod_cia,
                                          int cod_ramo,
                                          string desc_pregunta,
                                          string respuesta,
                                          string num_cotizacion,
                                          string num_poliza)
    {
        DataRow valida = null;
        Cotiza_DB objcomision = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OF0"))
            {
                valida = objcomision.RegistraPregCotizacion_DB(cod_cia,
                                                            cod_ramo,
                                                            desc_pregunta,
                                                            respuesta,
                                                            num_cotizacion,
                                                            num_poliza, 
                                                            Conexion);
                if (valida["P_ERROR"].ToString() == "")
                    return true;
                else
                    return false;
            }
        }

        catch (Exception ex)
        {
            return false;
        }
    }

    public static bool actualizaPregVeh(string num_cotizacion,
                                    string hijos,
                                    string franquicia,
                                    string danospre)
    {
        DataRow valida = null;
        Cotiza_DB objcomision = new Cotiza_DB();

        try
        {
            using (OracleConnection Conexion = MConexion.getConexion("OVDES"))
            {
                valida = objcomision.actualizaPregVeh_DB(num_cotizacion,
                                                            hijos,
                                                            franquicia,
                                                            danospre,
                                                            Conexion);
                if (valida["P_ERROR"].ToString() == "")
                    return true;
                else
                    return false;
            }
        }

        catch (Exception ex)
        {
            return false;
        }
    }


}
